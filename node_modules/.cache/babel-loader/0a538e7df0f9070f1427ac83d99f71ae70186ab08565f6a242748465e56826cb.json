{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Romeo\\\\Downloads\\\\ai-react-20230512T164644Z-001\\\\ai-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useState, useEffect, useRef } from 'react';\nimport { Route, Routes, useNavigate, useParams } from 'react-router-dom';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dictaphone = () => {\n  _s();\n  const [response, setResponse] = useState('');\n  const [voice, setVoice] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const {\n    data: users,\n    isFetched\n  } = useQuery([\"Users\"], async () => {\n    const request = await fetch(\"http://localhost:3001/getHistory\");\n    const response = await request.json();\n    return response;\n  });\n  const navigate = useNavigate();\n  if (isFetched) {\n    console.log(users);\n  }\n\n  // useEffect(() => {\n  //   sessionStorage.getItem(\"UserID\")? navigate(\"/\") : console.log(\"UserID Acquired\")\n  // })\n\n  useEffect(() => {\n    console.log(voice);\n  }, [voice]);\n  const inputRef = useRef();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  const login = () => {\n    const findUser = users.filter(user => {\n      return user.username === username;\n    });\n    if (findUser[0]) {\n      findUser[0].password === password ? alert(\"logging in\") : alert(\"invalid password\");\n    } else {\n      alert(\"User not found\");\n    }\n    sessionStorage.setItem(\"UserID\", findUser[0]._id);\n    console.log(findUser);\n    console.log(users);\n    console.log(sessionStorage.getItem(\"UserID\"));\n    navigate(\"/\");\n  };\n  const inputCheck = () => {\n    if (password === '') {\n      alert(\"Please enter a valid Password\");\n    } else if (username === '') {\n      alert(\"Please enter a valid Username\");\n    } else {\n      login();\n    }\n  };\n  const createHistory = async (prompt, response) => {\n    if (users) {\n      const userHistory = users.filter(user => {\n        return user._id === sessionStorage.getItem(\"UserID\");\n      })[0].history;\n      const temp = [...userHistory, {\n        prompt: prompt,\n        response: response\n      }];\n      await fetch(\"http://localhost:3001/postHistory\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userID: sessionStorage.getItem(\"UserID\"),\n          history: temp\n        })\n      });\n    }\n  };\n  const callGPT = async () => {\n    const prompt = '';\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer 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\"\n      },\n      body: JSON.stringify({\n        \"model\": \"gpt-3.5-turbo\",\n        \"max_tokens\": 500,\n        \"messages\": [{\n          \"role\": \"system\",\n          \"content\": prompt\n        }, {\n          \"role\": \"user\",\n          \"content\": voice\n        }]\n      })\n    });\n    const data = await request.json();\n    const responseText = data.choices && data.choices.length > 0 ? data.choices[0].message.content : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    audio.play();\n    inputRef.current.value = '';\n    console.log(responseText);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"password\",\n              onChange: e => {\n                setUsername(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"password\",\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: inputCheck,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Welcome, \", users ? users.filter(user => {\n                return user._id === sessionStorage.getItem(\"UserID\");\n              })[0].username : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: listening ? 'green' : 'red'\n              },\n              children: [\"Microphone: \", listening ? 'on' : 'off']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              style: {\n                height: '230px',\n                width: '500px'\n              },\n              placeholder: \"Type here or click record\",\n              onChange: e => {\n                setVoice(e.target.value);\n              },\n              ref: inputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setVoice(null);\n                SpeechRecognition.startListening();\n              },\n              children: \"Record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                SpeechRecognition.stopListening();\n                setVoice(transcript);\n              },\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                resetTranscript();\n                setResponse(null);\n                setVoice(null);\n                inputRef.current.value = null;\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                SpeechRecognition.stopListening();\n                setVoice(transcript);\n                callGPT();\n              },\n              children: \"Ask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'rgb(191, 186, 186)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: voice ? `User: ${voice}` : 'No request'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: response ? `AI: ${response}` : 'No response'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Dictaphone, \"SfMr6egDzJYj2J9EVVwY72zqgRE=\", false, function () {\n  return [useQuery, useNavigate, useSpeechRecognition];\n});\n_c = Dictaphone;\nexport default Dictaphone;\nvar _c;\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","useState","useEffect","useRef","Route","Routes","useNavigate","useParams","useQuery","useMutation","useQueryClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Dictaphone","_s","response","setResponse","voice","setVoice","password","setPassword","username","setUsername","data","users","isFetched","request","fetch","json","navigate","console","log","inputRef","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","login","findUser","filter","user","alert","sessionStorage","setItem","_id","getItem","inputCheck","createHistory","prompt","userHistory","history","temp","method","headers","body","JSON","stringify","userID","callGPT","responseText","choices","length","message","content","audio","Audio","play","current","value","path","element","placeholder","onChange","e","target","onClick","style","color","height","width","ref","startListening","stopListening","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Romeo/Downloads/ai-react-20230512T164644Z-001/ai-react/src/App.js"],"sourcesContent":["import React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useState, useEffect, useRef } from 'react';\nimport { Route, Routes, useNavigate, useParams } from 'react-router-dom';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\n\nconst Dictaphone = () => {\n  const [response, setResponse] = useState('');\n  const [voice, setVoice] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n\n  const {data: users, isFetched} = useQuery([\"Users\"], async () => {\n    const request = await fetch(\"http://localhost:3001/getHistory\")\n    const response = await request.json()\n    return response\n  });\n\n  const navigate = useNavigate()\n\n  if(isFetched){\n    console.log(users)\n  }\n\n  // useEffect(() => {\n  //   sessionStorage.getItem(\"UserID\")? navigate(\"/\") : console.log(\"UserID Acquired\")\n  // })\n\n  useEffect(() => {\n    console.log(voice)\n  }, [voice])\n\n  const inputRef = useRef();\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  const login = () => {\n    const findUser = users.filter((user) => {return user.username === username})\n    if(findUser[0]){\n      findUser[0].password === password ? alert(\"logging in\") : alert(\"invalid password\")\n    } else {\n      alert(\"User not found\")\n    }\n    sessionStorage.setItem(\"UserID\", findUser[0]._id)\n    console.log(findUser)\n    console.log(users)\n    console.log(sessionStorage.getItem(\"UserID\"))\n    navigate(\"/\")\n  }\n\n  const inputCheck = () => {\n    if(password === ''){\n      alert(\"Please enter a valid Password\")\n    } else if(username === ''){\n      alert(\"Please enter a valid Username\")\n    } else {\n      login()\n    }\n  }\n\n  const createHistory = async (prompt, response) => {\n    if(users){\n      const userHistory = users.filter((user) => {\n        return user._id === sessionStorage.getItem(\"UserID\")\n      })[0].history\n      const temp = [...userHistory, {\n        prompt: prompt,\n        response: response\n      }]\n      await fetch(\"http://localhost:3001/postHistory\", {\n      method: \"POST\",\n      headers: {\"Content-Type\" : \"application/json\"},\n      body: JSON.stringify({\n        userID: sessionStorage.getItem(\"UserID\"),\n        history: temp\n      })\n    })\n    }\n\n    \n  }\n\n  const callGPT = async () => {\n\n    const prompt = '';\n\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer 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\"\n      },\n      body: JSON.stringify({\n        \"model\": \"gpt-3.5-turbo\",\n        \"max_tokens\": 500,\n        \"messages\": [\n          {\n            \"role\": \"system\",\n            \"content\": prompt\n          },\n          {\n            \"role\": \"user\",\n            \"content\": voice\n          }\n        ]\n      })\n    })\n    const data = await request.json();\n    const responseText = data.choices && data.choices.length > 0 ? data.choices[0].message.content : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    audio.play();\n    inputRef.current.value = '';\n    console.log(responseText)\n  }\n\n\n\n  return (\n    <>\n    <Routes>\n      <Route path={\"/login\"} element={\n        <>\n        <div>\n          <input placeholder='password' onChange={(e) => {setUsername(e.target.value)}}></input>\n        </div>\n        <div>\n          <input placeholder='password' onChange={(e) => {setPassword(e.target.value)}}></input>\n        </div>\n        <div>\n          <button onClick={inputCheck}>Login</button>\n          <button>Register</button>\n        </div>\n        </>\n      }/>\n      <Route path='/' element={\n        <div>\n          <div>\n            <p>Welcome, {users ? users.filter((user) => {\n              return user._id === sessionStorage.getItem(\"UserID\")\n            })[0].username : null}</p>\n          </div>\n      <div>\n        <p style={{ color: listening ? 'green' : 'red' }}>Microphone: {listening ? 'on' : 'off'}</p>\n      </div>\n      <div>\n        <textarea style={{ height: '230px', width: '500px' }} placeholder='Type here or click record' onChange={(e) => { setVoice(e.target.value) }} ref={inputRef}></textarea>\n      </div>\n      <div>\n        <button onClick={() => {\n          setVoice(null);\n          SpeechRecognition.startListening();\n        }}>Record</button>\n        <button onClick={() => {\n          SpeechRecognition.stopListening();\n          setVoice(transcript);\n        }}>Stop</button>\n        <button onClick={() => {\n          resetTranscript();\n          setResponse(null);\n          setVoice(null);\n          inputRef.current.value = null;\n        }}>Reset</button>\n        <button onClick={() => {\n          SpeechRecognition.stopListening();\n          setVoice(transcript);\n          callGPT();\n        }}>Ask</button>\n      </div>\n      <div style={{ backgroundColor: 'rgb(191, 186, 186)' }}>\n        <p>{voice ? `User: ${voice}` : 'No request'}</p>\n        <p>{response ? `AI: ${response}` : 'No response'}</p>\n      </div>\n    </div>\n      }/>\n    </Routes>\n    </>\n  );\n}\n\n\nexport default Dictaphone;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}