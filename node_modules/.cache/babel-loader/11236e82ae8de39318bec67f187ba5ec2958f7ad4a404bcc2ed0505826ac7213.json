{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Romeo\\\\Downloads\\\\ai-react-20230512T164644Z-001\\\\ai-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useState, useEffect, useRef } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dictaphone = () => {\n  _s();\n  const [response, setResponse] = useState('');\n  const [voice, setVoice] = useState('');\n  useEffect(() => {\n    console.log(voice);\n  }, [voice]);\n  const inputRef = useRef();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  const callGPT = async () => {\n    const prompt = '';\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer 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\"\n      },\n      body: JSON.stringify({\n        \"model\": \"gpt-3.5-turbo\",\n        \"max_tokens\": 500,\n        \"messages\": [{\n          \"role\": \"system\",\n          \"content\": prompt\n        }, {\n          \"role\": \"user\",\n          \"content\": voice\n        }]\n      })\n    });\n    const data = await request.json();\n    const responseText = data.choices && data.choices.length > 0 ? data.choices[0].message.content : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    audio.play();\n    inputRef.current.value = '';\n    console.log(responseText);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: listening ? 'green' : 'red'\n          },\n          children: [\"Microphone: \", listening ? 'on' : 'off']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          style: {\n            height: '230px',\n            width: '500px'\n          },\n          placeholder: \"Type here or click record\",\n          onChange: e => {\n            setVoice(e.target.value);\n          },\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setVoice(null);\n            SpeechRecognition.startListening();\n          },\n          children: \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            SpeechRecognition.stopListening();\n            setVoice(transcript);\n          },\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            resetTranscript();\n            setResponse(null);\n            setVoice(null);\n            inputRef.current.value = null;\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            SpeechRecognition.stopListening();\n            setVoice(transcript);\n            callGPT();\n          },\n          children: \"Ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'rgb(191, 186, 186)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: voice ? `User: ${voice}` : 'No request'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response ? `AI: ${response}` : 'No response'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n_s(Dictaphone, \"oiqPplXiiw1ziniUGC7vVdQTO1s=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Dictaphone;\nexport default Dictaphone;\nvar _c;\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","useState","useEffect","useRef","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","Dictaphone","_s","response","setResponse","voice","setVoice","console","log","inputRef","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","callGPT","prompt","request","fetch","method","headers","body","JSON","stringify","data","json","responseText","choices","length","message","content","audio","Audio","play","current","value","style","color","height","width","placeholder","onChange","e","target","ref","onClick","startListening","stopListening","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Romeo/Downloads/ai-react-20230512T164644Z-001/ai-react/src/App.js"],"sourcesContent":["import React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useState, useEffect, useRef } from 'react';\nimport {Route, Routes} from 'react-router-dom'\n\nconst Dictaphone = () => {\n  const [response, setResponse] = useState('');\n  const [voice, setVoice] = useState('');\n\n  useEffect(() => {\n    console.log(voice)\n  }, [voice])\n\n  const inputRef = useRef();\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  const callGPT = async () => {\n\n    const prompt = '';\n\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer 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\"\n      },\n      body: JSON.stringify({\n        \"model\": \"gpt-3.5-turbo\",\n        \"max_tokens\": 500,\n        \"messages\": [\n          {\n            \"role\": \"system\",\n            \"content\": prompt\n          },\n          {\n            \"role\": \"user\",\n            \"content\": voice\n          }\n        ]\n      })\n    })\n    const data = await request.json();\n    const responseText = data.choices && data.choices.length > 0 ? data.choices[0].message.content : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    audio.play();\n    inputRef.current.value = '';\n    console.log(responseText)\n  }\n\n\n\n  return (\n    <>\n    <Routes>\n      \n    </Routes>\n<div>\n      <div>\n        <p style={{ color: listening ? 'green' : 'red' }}>Microphone: {listening ? 'on' : 'off'}</p>\n      </div>\n      <div>\n        <textarea style={{ height: '230px', width: '500px' }} placeholder='Type here or click record' onChange={(e) => { setVoice(e.target.value) }} ref={inputRef}></textarea>\n      </div>\n      <div>\n        <button onClick={() => {\n          setVoice(null);\n          SpeechRecognition.startListening();\n        }}>Record</button>\n        <button onClick={() => {\n          SpeechRecognition.stopListening();\n          setVoice(transcript);\n        }}>Stop</button>\n        <button onClick={() => {\n          resetTranscript();\n          setResponse(null);\n          setVoice(null);\n          inputRef.current.value = null;\n        }}>Reset</button>\n        <button onClick={() => {\n          SpeechRecognition.stopListening();\n          setVoice(transcript);\n          callGPT();\n        }}>Ask</button>\n      </div>\n      <div style={{ backgroundColor: 'rgb(191, 186, 186)' }}>\n        <p>{voice ? `User: ${voice}` : 'No request'}</p>\n        <p>{response ? `AI: ${response}` : 'No response'}</p>\n      </div>\n    </div>\n    </>\n  );\n}\n\n\nexport default Dictaphone;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}