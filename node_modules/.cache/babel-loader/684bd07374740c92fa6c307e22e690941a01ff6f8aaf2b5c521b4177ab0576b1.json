{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dad\\\\Documents\\\\ai-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dictaphone = () => {\n  _s();\n  const [response, setResponse] = useState('');\n  const [voice, setVoice] = useState('');\n  useEffect(() => {\n    console.log(voice);\n  }, [voice]);\n  const inputRef = useRef();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  const callGPT = async () => {\n    const prompt = '';\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer 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\"\n      },\n      body: JSON.stringify({\n        \"model\": \"gpt-3.5-turbo\",\n        \"max_tokens\": 500,\n        \"messages\": [{\n          \"role\": \"system\",\n          \"content\": prompt\n        }, {\n          \"role\": \"user\",\n          \"content\": voice\n        }]\n      })\n    });\n    const data = await request.json();\n    const responseText = data.choices && data.choices.length > 0 ? data.choices[0].message.content : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    audio.play();\n    inputRef.current.value = '';\n    console.log(responseText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: listening ? 'green' : 'red'\n        },\n        children: [\"Microphone: \", listening ? 'on' : 'off']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: {\n          height: '230px',\n          width: '500px'\n        },\n        placeholder: \"Type here or click record\",\n        onChange: e => {\n          setVoice(e.target.value);\n        },\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setVoice(null);\n          SpeechRecognition.startListening();\n        },\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          SpeechRecognition.stopListening();\n          setVoice(transcript);\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          resetTranscript();\n          setResponse(null);\n          inputRef.current.value = null;\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: callGPT,\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'rgb(191, 186, 186)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: voice ? `User: ${voice}` : 'No request'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response ? `AI: ${response}` : 'No response'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Dictaphone, \"oiqPplXiiw1ziniUGC7vVdQTO1s=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Dictaphone;\nexport default Dictaphone;\nvar _c;\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","useState","useEffect","useRef","jsxDEV","_jsxDEV","Dictaphone","_s","response","setResponse","voice","setVoice","console","log","inputRef","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","callGPT","prompt","request","fetch","method","headers","body","JSON","stringify","data","json","responseText","choices","length","message","content","audio","Audio","play","current","value","style","color","height","width","placeholder","onChange","e","target","ref","onClick","startListening","stopListening","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Dad/Documents/ai-react/src/App.js"],"sourcesContent":["import React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useState, useEffect, useRef } from 'react';\n\nconst Dictaphone = () => {\n  const [response, setResponse] = useState('');\n  const [voice, setVoice] = useState('');\n\n  useEffect(() => {\n    console.log(voice)\n  }, [voice])\n\n  const inputRef = useRef();\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  const callGPT = async () => {\n\n    const prompt = '';\n\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer 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\"\n      },\n      body: JSON.stringify({\n        \"model\": \"gpt-3.5-turbo\",\n        \"max_tokens\": 500,\n        \"messages\": [\n          {\n            \"role\": \"system\",\n            \"content\": prompt\n          },\n          {\n            \"role\": \"user\",\n            \"content\": voice\n          }\n        ]\n      })\n    })\n    const data = await request.json();\n    const responseText = data.choices && data.choices.length > 0 ? data.choices[0].message.content : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    audio.play();\n    inputRef.current.value = '';\n    console.log(responseText)\n  }\n\n\n\n  return (\n    <div>\n      <div>\n        <p style={{ color: listening ? 'green' : 'red' }}>Microphone: {listening ? 'on' : 'off'}</p>\n      </div>\n      <div>\n        <textarea style={{ height: '230px', width: '500px' }} placeholder='Type here or click record' onChange={(e) => { setVoice(e.target.value) }} ref={inputRef}></textarea>\n      </div>\n      <div>\n        <button onClick={() => {\n          setVoice(null);\n          SpeechRecognition.startListening();\n        }}>Record</button>\n        <button onClick={() => {\n          SpeechRecognition.stopListening();\n          setVoice(transcript);\n        }}>Stop</button>\n        <button onClick={() => {\n          resetTranscript();\n          setResponse(null);\n          inputRef.current.value = null;\n        }}>Reset</button>\n        <button onClick={callGPT}>Ask</button>\n      </div>\n      <div style={{ backgroundColor: 'rgb(191, 186, 186)' }}>\n        <p>{voice ? `User: ${voice}` : 'No request'}</p>\n        <p>{response ? `AI: ${response}` : 'No response'}</p>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Dictaphone;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAClF,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EACpB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMI,QAAQ,GAAGX,MAAM,CAAC,CAAC;EAEzB,MAAM;IACJY,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC;EACF,CAAC,GAAGlB,oBAAoB,CAAC,CAAC;EAE1B,IAAI,CAACkB,gCAAgC,EAAE;IACrC,oBAAOb,OAAA;MAAAc,QAAA,EAAM;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACjE;EAEA,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IAE1B,MAAMC,MAAM,GAAG,EAAE;IAEjB,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;MACxEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE;MACnB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB,OAAO,EAAE,eAAe;QACxB,YAAY,EAAE,GAAG;QACjB,UAAU,EAAE,CACV;UACE,MAAM,EAAE,QAAQ;UAChB,SAAS,EAAEP;QACb,CAAC,EACD;UACE,MAAM,EAAE,MAAM;UACd,SAAS,EAAEf;QACb,CAAC;MAEL,CAAC;IACH,CAAC,CAAC;IACF,MAAMuB,IAAI,GAAG,MAAMP,OAAO,CAACQ,IAAI,CAAC,CAAC;IACjC,MAAMC,YAAY,GAAGF,IAAI,CAACG,OAAO,IAAIH,IAAI,CAACG,OAAO,CAACC,MAAM,GAAG,CAAC,GAAGJ,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAACE,OAAO,CAACC,OAAO,GAAG,uBAAuB;IACxH9B,WAAW,CAAC0B,YAAY,CAAC;IACzB,IAAIK,KAAK,GAAG,IAAIC,KAAK,CAAE,qCAAoCN,YAAa,EAAC,CAAC;IAC1EK,KAAK,CAACE,IAAI,CAAC,CAAC;IACZ5B,QAAQ,CAAC6B,OAAO,CAACC,KAAK,GAAG,EAAE;IAC3BhC,OAAO,CAACC,GAAG,CAACsB,YAAY,CAAC;EAC3B,CAAC;EAID,oBACE9B,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAGwC,KAAK,EAAE;UAAEC,KAAK,EAAE9B,SAAS,GAAG,OAAO,GAAG;QAAM,CAAE;QAAAG,QAAA,GAAC,cAAY,EAACH,SAAS,GAAG,IAAI,GAAG,KAAK;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF,CAAC,eACNlB,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAUwC,KAAK,EAAE;UAAEE,MAAM,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAACC,WAAW,EAAC,2BAA2B;QAACC,QAAQ,EAAGC,CAAC,IAAK;UAAExC,QAAQ,CAACwC,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;QAAC,CAAE;QAACS,GAAG,EAAEvC;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpK,CAAC,eACNlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAM;UACrB3C,QAAQ,CAAC,IAAI,CAAC;UACdZ,iBAAiB,CAACwD,cAAc,CAAC,CAAC;QACpC,CAAE;QAAApC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClBlB,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAM;UACrBvD,iBAAiB,CAACyD,aAAa,CAAC,CAAC;UACjC7C,QAAQ,CAACI,UAAU,CAAC;QACtB,CAAE;QAAAI,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChBlB,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAM;UACrBrC,eAAe,CAAC,CAAC;UACjBR,WAAW,CAAC,IAAI,CAAC;UACjBK,QAAQ,CAAC6B,OAAO,CAACC,KAAK,GAAG,IAAI;QAC/B,CAAE;QAAAzB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjBlB,OAAA;QAAQiD,OAAO,EAAE9B,OAAQ;QAAAL,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNlB,OAAA;MAAKwC,KAAK,EAAE;QAAEY,eAAe,EAAE;MAAqB,CAAE;MAAAtC,QAAA,gBACpDd,OAAA;QAAAc,QAAA,EAAIT,KAAK,GAAI,SAAQA,KAAM,EAAC,GAAG;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDlB,OAAA;QAAAc,QAAA,EAAIX,QAAQ,GAAI,OAAMA,QAAS,EAAC,GAAG;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAhB,EAAA,CAvFKD,UAAU;EAAA,QAeVN,oBAAoB;AAAA;AAAA0D,EAAA,GAfpBpD,UAAU;AA0FhB,eAAeA,UAAU;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}