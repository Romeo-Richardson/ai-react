{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Romeo\\\\Downloads\\\\ai-react-20230512T164644Z-001\\\\ai-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dictaphone = () => {\n  _s();\n  var _users$filter$, _users$filter$2;\n  const [response, setResponse] = useState(\"\");\n  const [voice, setVoice] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [voiceStatus, setVoiceStatus] = useState(true);\n  const {\n    data: users,\n    isFetched\n  } = useQuery([\"Users\"], async () => {\n    const request = await fetch(\"http://localhost:3001/getHistory\");\n    const response = await request.json();\n    return response;\n  });\n  const navigate = useNavigate();\n  if (isFetched) {\n    console.log(users);\n  }\n  useEffect(() => {\n    !sessionStorage.getItem(\"UserID\") ? navigate(\"/login\") : console.log(\"UserID Acquired\");\n  }, []);\n  const inputRef = useRef();\n  let {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  const register = async () => {\n    const userCheck = users.filter(user => {\n      return user.username === username;\n    })[0];\n    console.log(userCheck);\n    if (!userCheck) {\n      try {\n        await fetch(\"http://localhost:3001/postUser\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: username,\n            history: [],\n            password: password\n          })\n        });\n        alert(\"User registered\");\n      } catch (error) {\n        alert(error);\n      }\n    } else {\n      alert(\"User already registered\");\n    }\n  };\n  const login = () => {\n    const findUser = users.filter(user => {\n      return user.username === username;\n    });\n    if (findUser[0]) {\n      if (findUser[0].password === password) {\n        alert(\"logging in\");\n        sessionStorage.setItem(\"UserID\", findUser[0]._id);\n        navigate(\"/\");\n      } else {\n        alert(\"invalid password\");\n      }\n    } else {\n      alert(\"User not found\");\n    }\n  };\n  const logout = () => {\n    sessionStorage.removeItem(\"UserID\");\n    navigate(\"/login\");\n  };\n  const inputCheck = fnc => {\n    if (password === null) {\n      alert(\"Please enter a valid Password\");\n    } else if (username === null) {\n      alert(\"Please enter a valid Username\");\n    } else {\n      fnc();\n    }\n  };\n  const createHistory = async (prompt, response) => {\n    const d = new Date();\n    if (users) {\n      const userHistory = users.filter(user => {\n        return user._id === sessionStorage.getItem(\"UserID\");\n      })[0].history;\n      const temp = [...userHistory, {\n        prompt: prompt,\n        response: response,\n        date: `${d.getMonth()}/${d.getDay()}/${d.getFullYear()}`\n      }];\n      await fetch(\"http://localhost:3001/postHistory\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: sessionStorage.getItem(\"UserID\"),\n          history: temp\n        })\n      });\n    }\n  };\n  const callGPT = async () => {\n    const prompt = \"\";\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer 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\"\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        max_tokens: 500,\n        messages: [{\n          role: \"system\",\n          content: prompt\n        }, {\n          role: \"user\",\n          content: voice\n        }]\n      })\n    });\n    const data = await request.json();\n    const responseText = data.choices && data.choices.length > 0 ? data.choices[0].message.content : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    if (voiceStatus) {\n      audio.play();\n    }\n    inputRef.current.value = \"\";\n    createHistory(voice, responseText);\n    console.log(responseText);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"username\",\n              onChange: e => {\n                setUsername(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"password\",\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                inputCheck(login);\n              },\n              disabled: username && password ? false : true,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                inputCheck(register);\n              },\n              disabled: username && password ? false : true,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Welcome,\", \" \", users ? (_users$filter$ = users.filter(user => {\n                return user._id === sessionStorage.getItem(\"UserID\");\n              })[0]) === null || _users$filter$ === void 0 ? void 0 : _users$filter$.username : null, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: listening ? \"green\" : \"red\"\n              },\n              children: [\"Microphone: \", listening ? \"on\" : \"off\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: voiceStatus ? \"green\" : \"red\"\n              },\n              children: [\"AI Voice: \", voiceStatus ? \"On\" : \"Off\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              style: {\n                height: \"230px\",\n                width: \"500px\"\n              },\n              placeholder: \"Type here or click record\",\n              onChange: e => {\n                setVoice(e.target.value);\n              },\n              ref: inputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (!voice) {\n                  setVoice(null);\n                  SpeechRecognition.startListening();\n                } else {\n                  alert(\"Clear text or click reset\");\n                }\n              },\n              children: \"Record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                SpeechRecognition.stopListening();\n                setVoice(transcript);\n              },\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                resetTranscript();\n                setResponse(null);\n                setVoice(null);\n                inputRef.current.value = null;\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                SpeechRecognition.stopListening();\n                if (!voice) {\n                  setVoice(transcript);\n                }\n                callGPT();\n              },\n              children: \"Ask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                voiceStatus ? setVoiceStatus(false) : setVoiceStatus(true);\n              },\n              children: \"Toggle Voice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                navigate(\"/history\");\n              },\n              children: \"History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: logout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"rgb(191, 186, 186)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: voice ? `User: ${voice}` : \"No request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: response ? `AI: ${response}` : \"No response\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/history\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"User History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"rgb(191, 186, 186)\",\n              maxHeight: \"800px\",\n              overflowY: \"auto\"\n            },\n            children: users && users.length !== 0 ? (_users$filter$2 = users.filter(user => {\n              return user._id === sessionStorage.getItem(\"UserID\");\n            })[0]) === null || _users$filter$2 === void 0 ? void 0 : _users$filter$2.history.map((item, key) => {\n              var _users$filter$3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: \"50px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"User:\", \" \", users ? (_users$filter$3 = users.filter(user => {\n                    return user._id === sessionStorage.getItem(\"UserID\");\n                  })[0]) === null || _users$filter$3 === void 0 ? void 0 : _users$filter$3.username : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Prompt: \", item.prompt]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Response: \", item.response]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Date: \", item.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 27\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 25\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No History Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Dictaphone, \"MWIdWeoyWcqi8SxTXPVEQL/eYvQ=\", false, function () {\n  return [useQuery, useNavigate, useSpeechRecognition];\n});\n_c = Dictaphone;\nexport default Dictaphone;\nvar _c;\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","useState","useEffect","useRef","Route","Routes","useNavigate","useQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","Dictaphone","_s","_users$filter$","_users$filter$2","response","setResponse","voice","setVoice","password","setPassword","username","setUsername","voiceStatus","setVoiceStatus","data","users","isFetched","request","fetch","json","navigate","console","log","sessionStorage","getItem","inputRef","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","register","userCheck","filter","user","method","headers","body","JSON","stringify","history","alert","error","login","findUser","setItem","_id","logout","removeItem","inputCheck","fnc","createHistory","prompt","d","Date","userHistory","temp","date","getMonth","getDay","getFullYear","callGPT","Authorization","model","max_tokens","messages","role","content","responseText","choices","length","message","audio","Audio","play","current","value","path","element","placeholder","onChange","e","target","onClick","disabled","style","color","height","width","ref","startListening","stopListening","backgroundColor","maxHeight","overflowY","map","item","key","_users$filter$3","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/Romeo/Downloads/ai-react-20230512T164644Z-001/ai-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nconst Dictaphone = () => {\n  const [response, setResponse] = useState(\"\");\n  const [voice, setVoice] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [voiceStatus, setVoiceStatus] = useState(true);\n\n  const { data: users, isFetched } = useQuery([\"Users\"], async () => {\n    const request = await fetch(\"http://localhost:3001/getHistory\");\n    const response = await request.json();\n    return response;\n  });\n\n  const navigate = useNavigate();\n\n  if (isFetched) {\n    console.log(users);\n  }\n\n  useEffect(() => {\n    !sessionStorage.getItem(\"UserID\")\n      ? navigate(\"/login\")\n      : console.log(\"UserID Acquired\");\n  }, []);\n\n  const inputRef = useRef();\n\n   let {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  const register = async () => {\n    const userCheck = users.filter((user) => {\n      return user.username === username;\n    })[0];\n    console.log(userCheck);\n    if (!userCheck) {\n      try {\n        await fetch(\"http://localhost:3001/postUser\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            username: username,\n            history: [],\n            password: password,\n          }),\n        });\n        alert(\"User registered\");\n      } catch (error) {\n        alert(error);\n      }\n    } else {\n      alert(\"User already registered\");\n    }\n  };\n\n  const login = () => {\n    const findUser = users.filter((user) => {\n      return user.username === username;\n    });\n    if (findUser[0]) {\n      if (findUser[0].password === password) {\n        alert(\"logging in\");\n        sessionStorage.setItem(\"UserID\", findUser[0]._id);\n        navigate(\"/\");\n      } else {\n        alert(\"invalid password\");\n      }\n    } else {\n      alert(\"User not found\");\n    }\n  };\n\n  const logout = () => {\n    sessionStorage.removeItem(\"UserID\");\n    navigate(\"/login\");\n  };\n\n  const inputCheck = (fnc) => {\n    if (password === null) {\n      alert(\"Please enter a valid Password\");\n    } else if (username === null) {\n      alert(\"Please enter a valid Username\");\n    } else {\n      fnc();\n    }\n  };\n\n  const createHistory = async (prompt, response) => {\n    const d = new Date();\n    if (users) {\n      const userHistory = users.filter((user) => {\n        return user._id === sessionStorage.getItem(\"UserID\");\n      })[0].history;\n      const temp = [\n        ...userHistory,\n        {\n          prompt: prompt,\n          response: response,\n          date: `${d.getMonth()}/${d.getDay()}/${d.getFullYear()}`,\n        },\n      ];\n      await fetch(\"http://localhost:3001/postHistory\", {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          _id: sessionStorage.getItem(\"UserID\"),\n          history: temp,\n        }),\n      });\n    }\n  };\n\n  const callGPT = async () => {\n    const prompt = \"\";\n\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization:\n          \"Bearer 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\",\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        max_tokens: 500,\n        messages: [\n          {\n            role: \"system\",\n            content: prompt,\n          },\n          {\n            role: \"user\",\n            content: voice,\n          },\n        ],\n      }),\n    });\n    const data = await request.json();\n    const responseText =\n      data.choices && data.choices.length > 0\n        ? data.choices[0].message.content\n        : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    if (voiceStatus) {\n      audio.play();\n    }\n    inputRef.current.value = \"\";\n    createHistory(voice, responseText);\n    console.log(responseText);\n  };\n\n  return (\n    <>\n      <Routes>\n        <Route\n          path={\"/login\"}\n          element={\n            <>\n              <div>\n                <input\n                  placeholder=\"username\"\n                  onChange={(e) => {\n                    setUsername(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <div>\n                <input\n                  placeholder=\"password\"\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <div>\n                <button\n                  onClick={() => {\n                    inputCheck(login);\n                  }}\n                  disabled={username && password ? false : true}\n                >\n                  Login\n                </button>\n                <button\n                  onClick={() => {\n                    inputCheck(register);\n                  }}\n                  disabled={username && password ? false : true}\n                >\n                  Register\n                </button>\n              </div>\n            </>\n          }\n        />\n        <Route\n          path=\"/\"\n          element={\n            <div>\n              <div>\n                <p>\n                  Welcome,{\" \"}\n                  {users\n                    ? users.filter((user) => {\n                        return user._id === sessionStorage.getItem(\"UserID\");\n                      })[0]?.username\n                    : null}\n                  .\n                </p>\n              </div>\n              <div>\n                <p style={{ color: listening ? \"green\" : \"red\" }}>\n                  Microphone: {listening ? \"on\" : \"off\"}\n                </p>\n              </div>\n              <div>\n                <p style={{ color: voiceStatus ? \"green\" : \"red\" }}>\n                  AI Voice: {voiceStatus ? \"On\" : \"Off\"}\n                </p>\n              </div>\n              <div>\n                <textarea\n                  style={{ height: \"230px\", width: \"500px\" }}\n                  placeholder=\"Type here or click record\"\n                  onChange={(e) => {\n                    setVoice(e.target.value);\n                  }}\n                  ref={inputRef}\n                ></textarea>\n              </div>\n              <div>\n                <button\n                  onClick={() => {\n                    if (!voice) {\n                      setVoice(null);\n                      SpeechRecognition.startListening();\n                    } else {\n                      alert(\"Clear text or click reset\");\n                    }\n                  }}\n                >\n                  Record\n                </button>\n                <button\n                  onClick={() => {\n                    SpeechRecognition.stopListening();\n                    setVoice(transcript);\n                  }}\n                >\n                  Stop\n                </button>\n                <button\n                  onClick={() => {\n                    resetTranscript();\n                    setResponse(null);\n                    setVoice(null);\n                    inputRef.current.value = null;\n                  }}\n                >\n                  Reset\n                </button>\n                <button\n                  onClick={() => {\n                    SpeechRecognition.stopListening();\n                    if (!voice) {\n                      setVoice(transcript);\n                    }\n                    callGPT();\n                  }}\n                >\n                  Ask\n                </button>\n                <button\n                  onClick={() => {\n                    voiceStatus ? setVoiceStatus(false) : setVoiceStatus(true);\n                  }}\n                >\n                  Toggle Voice\n                </button>\n                <button\n                  onClick={() => {\n                    navigate(\"/history\");\n                  }}\n                >\n                  History\n                </button>\n                <button onClick={logout}>Logout</button>\n              </div>\n              <div style={{ backgroundColor: \"rgb(191, 186, 186)\" }}>\n                <p>{voice ? `User: ${voice}` : \"No request\"}</p>\n                <p>{response ? `AI: ${response}` : \"No response\"}</p>\n              </div>\n            </div>\n          }\n        />\n        <Route\n          path=\"/history\"\n          element={\n            <>\n              <h2>User History</h2>\n              <div\n                style={{\n                  backgroundColor: \"rgb(191, 186, 186)\",\n                  maxHeight: \"800px\",\n                  overflowY: \"auto\",\n                }}\n              >\n                {users && users.length !== 0 ? (\n                  users\n                    .filter((user) => {\n                      return user._id === sessionStorage.getItem(\"UserID\");\n                    })[0]\n                    ?.history.map((item, key) => {\n                      return (\n                        <div key={key} style={{ marginBottom: \"50px\" }}>\n                          <p>\n                            User:{\" \"}\n                            {users\n                              ? users.filter((user) => {\n                                  return (\n                                    user._id ===\n                                    sessionStorage.getItem(\"UserID\")\n                                  );\n                                })[0]?.username\n                              : null}\n                          </p>\n                          <p>Prompt: {item.prompt}</p>\n                          <p>Response: {item.response}</p>\n                          <p>Date: {item.date}</p>\n                        </div>\n                      );\n                    })\n                ) : (\n                  <p>No History Available</p>\n                )}\n              </div>\n            </>\n          }\n        ></Route>\n      </Routes>\n    </>\n  );\n};\n\nexport default Dictaphone;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}