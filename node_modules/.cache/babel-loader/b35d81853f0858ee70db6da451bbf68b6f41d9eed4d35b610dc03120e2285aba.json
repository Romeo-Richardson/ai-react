{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Romeo\\\\Downloads\\\\ai-react-20230512T164644Z-001\\\\ai-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Route, Routes, useNavigate, useParams } from \"react-router-dom\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dictaphone = () => {\n  _s();\n  var _users$filter$, _users$filter$2;\n  const [response, setResponse] = useState(\"\");\n  const [voice, setVoice] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [username, setUsername] = useState(null);\n  const {\n    data: users,\n    isFetched\n  } = useQuery([\"Users\"], async () => {\n    const request = await fetch(\"http://localhost:3001/getHistory\");\n    const response = await request.json();\n    return response;\n  });\n  const navigate = useNavigate();\n  if (isFetched) {\n    console.log(users);\n  }\n  useEffect(() => {\n    !sessionStorage.getItem(\"UserID\") ? navigate(\"/login\") : console.log(\"UserID Acquired\");\n  }, []);\n  const inputRef = useRef();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  const register = async () => {\n    const userCheck = users.filter(user => {\n      return user.username === username;\n    })[0];\n    console.log(userCheck);\n    if (!userCheck) {\n      try {\n        await fetch(\"http://localhost:3001/postUser\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: username,\n            history: [],\n            password: password\n          })\n        });\n        alert(\"User registered\");\n      } catch (error) {\n        alert(error);\n      }\n    } else {\n      alert(\"User already registered\");\n    }\n  };\n  const login = () => {\n    const findUser = users.filter(user => {\n      return user.username === username;\n    });\n    if (findUser[0]) {\n      if (findUser[0].password === password) {\n        alert(\"logging in\");\n        sessionStorage.setItem(\"UserID\", findUser[0]._id);\n      } else {\n        alert(\"invalid password\");\n      }\n    } else {\n      alert(\"User not found\");\n    }\n    console.log(findUser);\n    console.log(users);\n    console.log(sessionStorage.getItem(\"UserID\"));\n    navigate(\"/\");\n  };\n  const logout = () => {\n    sessionStorage.removeItem(\"UserID\");\n    navigate(\"/login\");\n  };\n  const inputCheck = fnc => {\n    if (password === null) {\n      alert(\"Please enter a valid Password\");\n    } else if (username === null) {\n      alert(\"Please enter a valid Username\");\n    } else {\n      fnc();\n    }\n  };\n  const createHistory = async (prompt, response) => {\n    const d = new Date();\n    if (users) {\n      const userHistory = users.filter(user => {\n        return user._id === sessionStorage.getItem(\"UserID\");\n      })[0].history;\n      const temp = [...userHistory, {\n        prompt: prompt,\n        response: response,\n        date: `${d.getMonth()}/${d.getDay()}/${d.getFullYear()}`\n      }];\n      await fetch(\"http://localhost:3001/postHistory\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: sessionStorage.getItem(\"UserID\"),\n          history: temp\n        })\n      });\n    }\n  };\n  const callGPT = async () => {\n    const prompt = \"\";\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer 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\"\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        max_tokens: 500,\n        messages: [{\n          role: \"system\",\n          content: prompt\n        }, {\n          role: \"user\",\n          content: voice\n        }]\n      })\n    });\n    const data = await request.json();\n    const responseText = data.choices && data.choices.length > 0 ? data.choices[0].message.content : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    audio.play();\n    inputRef.current.value = \"\";\n    createHistory(voice, responseText);\n    console.log(responseText);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"username\",\n              onChange: e => {\n                setUsername(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"password\",\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                inputCheck(login);\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                inputCheck(register);\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Welcome,\", \" \", users ? (_users$filter$ = users.filter(user => {\n                return user._id === sessionStorage.getItem(\"UserID\");\n              })[0]) === null || _users$filter$ === void 0 ? void 0 : _users$filter$.username : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: listening ? \"green\" : \"red\"\n              },\n              children: [\"Microphone: \", listening ? \"on\" : \"off\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              style: {\n                height: \"230px\",\n                width: \"500px\"\n              },\n              placeholder: \"Type here or click record\",\n              onChange: e => {\n                setVoice(e.target.value);\n              },\n              ref: inputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (!voice) {\n                  setVoice(null);\n                  SpeechRecognition.startListening();\n                } else {\n                  alert(\"Clear text or click reset\");\n                }\n              },\n              children: \"Record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                SpeechRecognition.stopListening();\n                setVoice(transcript);\n              },\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                resetTranscript();\n                setResponse(null);\n                setVoice(null);\n                inputRef.current.value = null;\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                SpeechRecognition.stopListening();\n                if (transcript) {\n                  setVoice(transcript);\n                }\n                callGPT();\n              },\n              children: \"Ask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                navigate(\"/history\");\n              },\n              children: \"History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: logout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"rgb(191, 186, 186)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: voice ? `User: ${voice}` : \"No request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: response ? `AI: ${response}` : \"No response\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/history\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"User History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"rgb(191, 186, 186)\",\n              maxHeight: \"800px\",\n              overflowY: \"auto\"\n            },\n            children: users && users.length !== 0 ? (_users$filter$2 = users.filter(user => {\n              return user._id === sessionStorage.getItem(\"UserID\");\n            })[0]) === null || _users$filter$2 === void 0 ? void 0 : _users$filter$2.history.map((item, key) => {\n              var _users$filter$3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: \"50px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"User: \", users ? (_users$filter$3 = users.filter(user => {\n                    return user._id === sessionStorage.getItem(\"UserID\");\n                  })[0]) === null || _users$filter$3 === void 0 ? void 0 : _users$filter$3.username : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Prompt: \", item.prompt]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Response: \", item.response]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Date: \", item.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No History Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Dictaphone, \"BpvDkX6pIIVwSDTQ1YPgX6HiK4w=\", false, function () {\n  return [useQuery, useNavigate, useSpeechRecognition];\n});\n_c = Dictaphone;\nexport default Dictaphone;\nvar _c;\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","useState","useEffect","useRef","Route","Routes","useNavigate","useParams","useQuery","useMutation","useQueryClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Dictaphone","_s","_users$filter$","_users$filter$2","response","setResponse","voice","setVoice","password","setPassword","username","setUsername","data","users","isFetched","request","fetch","json","navigate","console","log","sessionStorage","getItem","inputRef","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","register","userCheck","filter","user","method","headers","body","JSON","stringify","history","alert","error","login","findUser","setItem","_id","logout","removeItem","inputCheck","fnc","createHistory","prompt","d","Date","userHistory","temp","date","getMonth","getDay","getFullYear","callGPT","Authorization","model","max_tokens","messages","role","content","responseText","choices","length","message","audio","Audio","play","current","value","path","element","placeholder","onChange","e","target","onClick","style","color","height","width","ref","startListening","stopListening","backgroundColor","maxHeight","overflowY","map","item","key","_users$filter$3","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/Romeo/Downloads/ai-react-20230512T164644Z-001/ai-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Route, Routes, useNavigate, useParams } from \"react-router-dom\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\n\nconst Dictaphone = () => {\n  const [response, setResponse] = useState(\"\");\n  const [voice, setVoice] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [username, setUsername] = useState(null);\n\n  const { data: users, isFetched } = useQuery([\"Users\"], async () => {\n    const request = await fetch(\"http://localhost:3001/getHistory\");\n    const response = await request.json();\n    return response;\n  });\n\n  const navigate = useNavigate();\n\n  if (isFetched) {\n    console.log(users);\n  }\n\n  useEffect(() => {\n    !sessionStorage.getItem(\"UserID\")? navigate(\"/login\") : console.log(\"UserID Acquired\")\n  }, [])\n\n  const inputRef = useRef();\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  const register = async () => {\n    const userCheck = users.filter((user) => {\n      return user.username === username\n    })[0]\n    console.log(userCheck)\n    if(!userCheck){\n      try {\n      await fetch(\"http://localhost:3001/postUser\", {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        username: username,\n        history: [],\n        password: password\n      })\n    })\n    alert(\"User registered\")\n    } catch (error) {\n      alert(error)\n    }\n    } else {\n      alert(\"User already registered\")\n    }\n    \n  }\n\n  const login = () => {\n    const findUser = users.filter((user) => {\n      return user.username === username;\n    });\n    if (findUser[0]) {\n      if(findUser[0].password === password){\n        alert(\"logging in\")\n        sessionStorage.setItem(\"UserID\", findUser[0]._id);\n      } else {alert(\"invalid password\");}\n    } else {\n      alert(\"User not found\");\n    }\n    \n    console.log(findUser);\n    console.log(users);\n    console.log(sessionStorage.getItem(\"UserID\"));\n    navigate(\"/\");\n  };\n\n  const logout = () => {\n    sessionStorage.removeItem(\"UserID\")\n    navigate(\"/login\")\n  }\n\n  const inputCheck = (fnc) => {\n    if (password === null) {\n      alert(\"Please enter a valid Password\");\n    } else if (username === null) {\n      alert(\"Please enter a valid Username\");\n    } else {\n      fnc();\n    }\n  };\n\n  const createHistory = async (prompt, response) => {\n    const d = new Date()\n    if (users) {\n      const userHistory = users.filter((user) => {\n        return user._id === sessionStorage.getItem(\"UserID\");\n      })[0].history;\n      const temp = [\n        ...userHistory,\n        {\n          prompt: prompt,\n          response: response,\n          date: `${d.getMonth()}/${d.getDay()}/${d.getFullYear()}`\n        },\n      ];\n      await fetch(\"http://localhost:3001/postHistory\", {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          _id: sessionStorage.getItem(\"UserID\"),\n          history: temp,\n        }),\n      });\n    }\n  };\n\n  const callGPT = async () => {\n    const prompt = \"\";\n\n    const request = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization:\n          \"Bearer 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\",\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        max_tokens: 500,\n        messages: [\n          {\n            role: \"system\",\n            content: prompt,\n          },\n          {\n            role: \"user\",\n            content: voice,\n          },\n        ],\n      }),\n    });\n    const data = await request.json();\n    const responseText =\n      data.choices && data.choices.length > 0\n        ? data.choices[0].message.content\n        : \"No response from God.\";\n    setResponse(responseText);\n    let audio = new Audio(`http://localhost:3001/speech?text=${responseText}`);\n    audio.play();\n    inputRef.current.value = \"\";\n    createHistory(voice, responseText)\n    console.log(responseText);\n  };\n\n  return (\n    <>\n      <Routes>\n        <Route\n          path={\"/login\"}\n          element={\n            <>\n              <div>\n                <input\n                  placeholder=\"username\"\n                  onChange={(e) => {\n                    setUsername(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <div>\n                <input\n                  placeholder=\"password\"\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <div>\n                <button onClick={() =>  {inputCheck(login)}}>Login</button>\n                <button onClick={() => {inputCheck(register)}}>Register</button>\n              </div>\n            </>\n          }\n        />\n        <Route\n          path=\"/\"\n          element={\n            <div>\n              <div>\n                <p>\n                  Welcome,{\" \"}\n                  {users\n                    ? users.filter((user) => {\n                        return user._id === sessionStorage.getItem(\"UserID\");\n                      })[0]?.username\n                    : null}\n                </p>\n              </div>\n              <div>\n                <p style={{ color: listening ? \"green\" : \"red\" }}>\n                  Microphone: {listening ? \"on\" : \"off\"}\n                </p>\n              </div>\n              <div>\n                <textarea\n                  style={{ height: \"230px\", width: \"500px\" }}\n                  placeholder=\"Type here or click record\"\n                  onChange={(e) => {\n                    setVoice(e.target.value);\n                  }}\n                  ref={inputRef}\n                ></textarea>\n              </div>\n              <div>\n                <button\n                  onClick={() => {\n                    if(!voice){\n                      setVoice(null);\n                      SpeechRecognition.startListening();\n                    } else {\n                      alert(\"Clear text or click reset\")\n                    }\n                  }}\n                >\n                  Record\n                </button>\n                <button\n                  onClick={() => {\n                    SpeechRecognition.stopListening();\n                    setVoice(transcript);\n                  }}\n                >\n                  Stop\n                </button>\n                <button\n                  onClick={() => {\n                    resetTranscript();\n                    setResponse(null);\n                    setVoice(null);\n                    inputRef.current.value = null;\n                  }}\n                >\n                  Reset\n                </button>\n                <button\n                  onClick={() => {\n                    SpeechRecognition.stopListening();\n                    if(transcript){\n                      setVoice(transcript);\n                    }\n                    callGPT();\n                  }}\n                >\n                  Ask\n                </button>\n                <button onClick={() => {navigate(\"/history\")}}>\n                  History\n                </button>\n                <button onClick={logout}>\n                  Logout\n                </button>\n              </div>\n              <div style={{ backgroundColor: \"rgb(191, 186, 186)\" }}>\n                <p>{voice ? `User: ${voice}` : \"No request\"}</p>\n                <p>{response ? `AI: ${response}` : \"No response\"}</p>\n              </div>\n            </div>\n          }\n        />\n        <Route path=\"/history\" element={\n          <>\n          <h2>User History</h2>\n          <div style={{backgroundColor: \"rgb(191, 186, 186)\", maxHeight: \"800px\", overflowY: \"auto\"}}>\n            {users && users.length !== 0? users.filter((user) => {\n              return user._id === sessionStorage.getItem(\"UserID\")\n            })[0]?.history.map((item, key) => {\n              return (\n                <div key={key} style={{marginBottom: \"50px\"}}>\n                  <p>User: {users? users.filter((user) => { \n                    return user._id === sessionStorage.getItem(\"UserID\")\n                  })[0]?.username : null}</p>\n                  <p>Prompt: {item.prompt}</p>\n                  <p>Response: {item.response}</p>\n                  <p>Date: {item.date}</p>\n                </div>\n              )\n            }): <p>No History Available</p>}\n          </div>\n          </>\n        }>\n        </Route>\n      </Routes>\n    </>\n  );\n};\n\nexport default Dictaphone;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}